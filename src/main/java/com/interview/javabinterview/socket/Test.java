package com.interview.javabinterview.socket;


import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

/**
 * ç±»
 *
 * @author Ju Baoquan
 * Created at  2020/2/28
 */
public class Test {
    public static void main(String[] args) {
        Set<Integer> set = new HashSet<>();
        List<String> strList = new ArrayList<>();
        strList.add("1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000122\n" +
                ",3000125\n" +
                ",3000135\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006");
        strList.add("1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000122\n" +
                ",3000125\n" +
                ",3000135\n" +
                ",4000033\n" +
                ",6000005\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006");
        strList.add("1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000122\n" +
                ",3000125\n" +
                ",3000135\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006");
        strList.add("1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000122\n" +
                ",3000125\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006");
        strList.add("1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000122\n" +
                ",3000125\n" +
                ",3000135\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006");
        strList.add("1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000122\n" +
                ",3000125\n" +
                ",3000135\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006");
        strList.add("1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000125\n" +
                ",4000033\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006");
        strList.add("1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000122\n" +
                ",3000125\n" +
                ",4000033\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006");
        strList.add("1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000122\n" +
                ",3000125\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006");
        strList.add("1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000122\n" +
                ",3000125\n" +
                ",3000135\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006");
        strList.add("1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000122\n" +
                ",3000125\n" +
                ",3000135\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006");
        strList.add("1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000122\n" +
                ",3000125\n" +
                ",3000135\n" +
                ",4000033\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006");
        strList.add("1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000122\n" +
                ",3000125\n" +
                ",3000129\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006");
        strList.add("1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000122\n" +
                ",3000125\n" +
                ",3000135\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000005\n" +
                ",30000006");
        strList.add("1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000125\n" +
                ",3000135\n" +
                ",6000005\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006");
        strList.add("1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000122\n" +
                ",3000125\n" +
                ",3000135\n" +
                ",4000033\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000005\n" +
                ",30000006");
        strList.add("1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000122\n" +
                ",3000125\n" +
                ",3000135\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006");
        strList.add("1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000122\n" +
                ",3000125\n" +
                ",3000135\n" +
                ",6000005\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006");
        strList.add("1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000122\n" +
                ",3000125\n" +
                ",4000033\n" +
                ",6000005\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006");
        strList.add("1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000125\n" +
                ",3000129\n" +
                ",3000135\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006");
        strList.add("1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000122\n" +
                ",3000125\n" +
                ",3000135\n" +
                ",6000005\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006\n" +
                ",1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000125\n" +
                ",4000033\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000005\n" +
                ",30000006\n" +
                ",1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000122\n" +
                ",3000125\n" +
                ",3000135\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006\n" +
                ",1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000122\n" +
                ",3000125\n" +
                ",3000135\n" +
                ",4000033\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006\n" +
                ",1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000122\n" +
                ",3000125\n" +
                ",3000135\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006\n" +
                ",1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000122\n" +
                ",3000125\n" +
                ",3000135\n" +
                ",4000033\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006\n" +
                ",1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000122\n" +
                ",3000125\n" +
                ",3000135\n" +
                ",6000005\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006\n" +
                ",1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000122\n" +
                ",3000125\n" +
                ",3000135\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006\n" +
                ",1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000122\n" +
                ",3000125\n" +
                ",4000033\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006\n" +
                ",1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000125\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006\n" +
                ",1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000122\n" +
                ",3000125\n" +
                ",3000135\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006\n" +
                ",1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000122\n" +
                ",3000125\n" +
                ",3000135\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006\n" +
                ",1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000122\n" +
                ",3000125\n" +
                ",6000005\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006\n" +
                ",1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000122\n" +
                ",3000125\n" +
                ",3000129\n" +
                ",3000135\n" +
                ",4000033\n" +
                ",6000005\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006\n" +
                ",1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000122\n" +
                ",3000125\n" +
                ",4000033\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006\n" +
                ",1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000122\n" +
                ",3000125\n" +
                ",4000033\n" +
                ",6000005\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006\n" +
                ",1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000122\n" +
                ",3000125\n" +
                ",3000135\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006\n" +
                ",1000007\n" +
                ",1000008\n" +
                ",3000116\n" +
                ",3000120\n" +
                ",3000121\n" +
                ",3000122\n" +
                ",3000125\n" +
                ",3000135\n" +
                ",4000033\n" +
                ",10000015\n" +
                ",11000015\n" +
                ",14000140\n" +
                ",20100001\n" +
                ",20100002\n" +
                ",20300001\n" +
                ",20300004\n" +
                ",21000004\n" +
                ",21000005\n" +
                ",30000006");
        for (String s : strList) {
            String[] split = s.split(",");
            for (String s1 : split) {
                int l = Integer.parseInt(s1.trim());
                set.add(l);
            }
        }
        Integer[] longs = set.toArray(new Integer[]{});
        bubbleSort(longs);
        for (Integer aLong : longs) {
            System.out.println(aLong);
        }
    }


    public static void bubbleSort(Integer[] array) {
        if (array.length == 0) {
            return;
        }
        for (int i = 0; i < array.length; i++) {
            for (int j = 0; j < array.length - 1 - i; j++) {
                if (array[j] > array[j + 1]) {
                    int temp = array[j];
                    array[j] = array[j + 1];
                    array[j + 1] = temp;
                }
            }
        }
    }
}
